---
- hosts: "all"
  tasks:
    - name: "Install ipset"
      yum:
        name: ipset
        state: present
    - name: "Create allow all test set"
      ipset:
        name: "test"
        set_type: "hash:net"
        members:
          - "128.0.0.0/1"
          - "0.0.0.0/1"
    - name: "register test set status"
      command: "ipset list test"
      register: test_ipset_output
      changed_when: false
      failed_when: false
    - name: "Verify that set exists"
      assert:
        that:
          - "test_ipset_output.rc == 0"
          - "'128.0.0.0/1' in test_ipset_output.stdout"
          - "'0.0.0.0/1' in test_ipset_output.stdout"

    - name: "Recreate allow all test set"
      ipset:
        name: "test"
        set_type: "hash:net"
        members:
          - "128.0.0.0/1"
          - "0.0.0.0/1"
      register: test_ipset
    - name: "Verify that nothing changed"
      assert:
        that:
          - "not test_ipset.changed"

    - name: "Remove half the IPs in the world"
      ipset:
        name: "test"
        set_type: "hash:net"
        members:
          - "128.0.0.0/1"
    - name: "register test set status"
      command: "ipset list test"
      register: test_ipset_output
      changed_when: false
      failed_when: false
    - name: "Verify that set exists and has the correct members"
      assert:
        that:
          - "test_ipset_output.rc == 0"
          - "'128.0.0.0/1' in test_ipset_output.stdout"
          - "'0.0.0.0/1' not in test_ipset_output.stdout"

    - name: "Remove half the IPs in the world, again"
      ipset:
        name: "test"
        set_type: "hash:net"
        members:
          - "128.0.0.0/1"
      register: test_ipset
    - name: "Verify that nothing changed"
      assert:
        that:
          - "not test_ipset.changed"

    - name: "Add an additional range"
      ipset:
        name: "test"
        set_type: "hash:net"
        members:
          - "128.0.0.0/1"
          - "10.0.0.0/8"
    - name: "register test set status"
      command: "ipset list test"
      register: test_ipset_output
      changed_when: false
      failed_when: false
    - name: "Verify that set exists and has the correct members"
      assert:
        that:
          - "test_ipset_output.rc == 0"
          - "'128.0.0.0/1' in test_ipset_output.stdout"
          - "'0.0.0.0/1' not in test_ipset_output.stdout"
          - "'10.0.0.0/8' in test_ipset_output.stdout"

    - name: "Add an additional range, again"
      ipset:
        name: "test"
        set_type: "hash:net"
        members:
          - "128.0.0.0/1"
          - "10.0.0.0/8"
      register: test_ipset
    - name: "Verify that nothing changed"
      assert:
        that:
          - "not test_ipset.changed"

    - name: "Remove the ipset"
      ipset:
        name: "test"
        state: "absent"
    - name: "register test set status"
      command: "ipset list test"
      register: test_ipset_output
      changed_when: false
      failed_when: false
    - name: "Verify that set does not exist"
      assert:
        that:
          - "test_ipset_output.rc != 0"
          - "test_ipset_output.stdout == ''"

    - name: "Remove the ipset, again"
      ipset:
        name: "test"
        state: "absent"
      register: test_ipset
    - name: "Verify that nothing changed"
      assert:
        that:
          - "not test_ipset.changed"

  roles:
    - "ipset_firewall"
