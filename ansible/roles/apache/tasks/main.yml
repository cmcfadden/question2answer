---
- name: ensure apache version is compatible with RHEL version
  fail:
    msg: "Only RHEL 7 with Apache 2.4 or RHEL 6 with Apache 2.2 or 2.4 is supported."
  when: ansible_distribution_major_version == '7' and apache_version | version_compare('2.2', '=')
  tags:
    - apache

- name: ensure apache is installed
  yum:
    pkg: httpd
    state: present
  when: not apache_from_scl
  tags:
    - apache
    - installed_by_default

- name: ensure apache 2.4 is installed from scl
  yum:
    pkg: httpd24
    state: present
  when: apache_from_scl
  tags:
    - apache
    - request_installation

- name: create apache directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ apache_user }}"
    group: "{{ apache_group }}"
    mode: "{{ apache_dir_mode }}"
  with_items:
    - "{{ apache_httpd_dir }}"
    - "{{ apache_conf_dir }}"
    - "{{ apache_confd_dir }}"
    - "{{ apache_vhostsd_dir }}"
    - "{{ apache_log_dir }}"
  tags:
    - apache

- name: create apache conf.modules.d directory
  file:
    path: "{{ apache_conf_modulesd_dir }}"
    state: directory
    owner: "{{ apache_user }}"
    group: "{{ apache_group }}"
    mode: "{{ apache_dir_mode }}"
  when: apache_version | version_compare('2.4', '=')
  tags:
    apache

- name: ensure cronolog is installed
  yum:
    pkg: cronolog
    state: present
  tags:
    - apache
    - installed_by_default

- name: create apache configuration
  template:
    dest: "{{ apache_conf_dir }}/httpd.conf"
    src: httpd-{{ apache_version }}.conf.j2
    owner: "{{ apache_user }}"
    group: "{{ apache_group }}"
    mode: "{{ apache_file_mode }}"
  notify:
   - restart apache
  tags:
   - apache

- name: create vhost configurations
  include: vhosts.yml
  tags:
   - apache

- name: create apache module configuration
  copy:
    dest: "{{ apache_conf_modulesd_dir }}"
    src: "{{ item }}"
    owner: "{{ apache_user }}"
    group: "{{ apache_group }}"
    mode: "{{ apache_file_mode }}"
  with_items:
    - conf.modules.d/00-base.conf
    - conf.modules.d/00-mpm.conf
  when: apache_version | version_compare('2.4', '=')
  notify:
    - restart apache
  tags:
    - apache

- name: create ssl configurations
  include: ssl.yml
  when: apache_enable_ssl
  tags:
   - apache

- name: manage the ssl certificates and keys
  include: cert-key-management.yml
  vars:
    apache_vhost_item: "{{ item }}"
    apache_vhost_item_key_file: "{{ item.ssl_certificate_key_file | default(item.server_name + '.key') }}"
    apache_vhost_item_cer_file: "{{ item.ssl_certificate_cer_file | default(item.server_name + '.cer') }}"
    apache_vhost_item_interm_cer_file: "{{ item.ssl_certificate_interm_cer_file | default(item.server_name + '_interm.cer') }}"
  with_items: "{{ apache_ssl_enabled_vhosts }}"
  tags:
    - apache
    - cert-key-management

- name: create systemd module configuration for RHEL 7
  copy:
    dest: "{{ apache_conf_modulesd_dir }}"
    src: "{{ item }}"
    owner: "{{ apache_user }}"
    group: "{{ apache_group }}"
    mode: "{{ apache_file_mode }}"
  with_items:
    - conf.modules.d/00-systemd.conf
  when: ansible_distribution_major_version == '7'
  notify:
    - restart apache
  tags:
    - apache

- name: create logs symbolic link
  file:
    path: "{{ apache_httpd_dir}}/logs"
    src: "{{ apache_log_dir }}"
    state: link
    owner: "{{ apache_user }}"
    group: "{{ apache_group }}"
  ignore_errors: "{{ ansible_check_mode }}"
  tags:
    - apache

- name: create modules symbolic link
  file:
    path: "{{ apache_httpd_dir}}/modules"
    src: "{{ apache_modules_dir }}"
    state: link
    owner: "{{ apache_user }}"
    group: "{{ apache_group }}"
  tags:
    - apache

- name: create run symbolic link
  file:
    path: "{{ apache_httpd_dir}}/run"
    src: "{{ apache_run_dir }}"
    state: link
    owner: "{{ apache_user }}"
    group: "{{ apache_group }}"
  tags:
    - apache

- name: copy doc directory
  command: "cp -a {{ apache_original_doc_dir}} {{ apache_doc_dir }}"
  args:
    creates: "{{ apache_doc_dir }}"
  tags:
    - apache

- name: verify OPTIONS directive is correct
  become: "{{ ansible_distribution_major_version == '7' }}"
  lineinfile:
    line: "OPTIONS=\"-d {{ apache_httpd_dir }}\""
    dest: "{{ apache_sysconfig }}"
    create: no
    state: present
  tags:
    - apache

- name: check to see if apache is enabled at boot
  shell: "/sbin/chkconfig --list {{ apache_service }} | grep -q 3:on"
  register: apache_enabled
  changed_when: false
  failed_when: false
  when: "ansible_distribution_major_version | int <= 6"
  tags:
    - apache

- name: ensure apache is enabled at boot
  command: "sudo /sbin/chkconfig {{ apache_service }} on"
  when: "ansible_distribution_major_version | int <= 6 and apache_enabled.rc != 0"
  tags:
    - apache

- name: enable via systemctl
  command: "sudo systemctl enable {{ apache_service }}"
  register: "systemctl_enable"
  changed_when: "'Created symlink' in systemctl_enable.stderr"
  when: "ansible_distribution_major_version | int >= 7"
  tags:
    - apache
